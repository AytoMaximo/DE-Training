from kafka import KafkaConsumer
import json
import requests
from datetime import datetime

CLICKHOUSE_URL = "http://localhost:8123"
CLICKHOUSE_USER = "user"
CLICKHOUSE_PASSWORD = "strongpassword"

# –§—É–Ω–∫—Ü–∏—è create_clickhouse_table –æ—Ç–≤–µ—á–∞–µ—Ç –∑–∞ —Å–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã changes –≤ –±–∞–∑–µ ClickHouse.
# –û–Ω–∞ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç SQL-–∑–∞–ø—Ä–æ—Å —á–µ—Ä–µ–∑ HTTP-–∑–∞–ø—Ä–æ—Å —Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–µ–π –∏ —Å–æ–∑–¥–∞—ë—Ç —Ç–∞–±–ª–∏—Ü—É, –µ—Å–ª–∏ —Ç–∞ –µ—â—ë –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.
# –≠—Ç–∞ —Ç–∞–±–ª–∏—Ü–∞ –±—É–¥–µ—Ç —Ö—Ä–∞–Ω–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è: ID, –∏–º—è, –¥–∞—Ç—É —Å–æ–∑–¥–∞–Ω–∏—è, —Ç–∏–ø –æ–ø–µ—Ä–∞—Ü–∏–∏ (–≤—Å—Ç–∞–≤–∫–∞, –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ, —É–¥–∞–ª–µ–Ω–∏–µ)
# –∏ –≤—Ä–µ–º–µ–Ω–Ω—É—é –º–µ—Ç–∫—É –≤—Å—Ç–∞–≤–∫–∏.

def create_clickhouse_table():
    query = """
    CREATE TABLE IF NOT EXISTS changes (
        id UInt32,
        name String,
        created_at DateTime,
        op String,
        ts DateTime DEFAULT now()
    ) ENGINE = MergeTree()
    ORDER BY (id, ts);
    """
    r = requests.post(
        CLICKHOUSE_URL,
        data=query,
        auth=(CLICKHOUSE_USER, CLICKHOUSE_PASSWORD)
    )

# –§—É–Ω–∫—Ü–∏—è insert_to_clickhouse –ø—Ä–∏–Ω–∏–º–∞–µ—Ç —Å–ø–∏—Å–æ–∫ —Å–æ–±—ã—Ç–∏–π (batch) –∏ —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç –∏–∑ –Ω–∏—Ö SQL-–∑–∞–ø—Ä–æ—Å
# –¥–ª—è –º–∞—Å—Å–æ–≤–æ–π –≤—Å—Ç–∞–≤–∫–∏ –≤ ClickHouse. –û–Ω–∞ —Å–æ–±–∏—Ä–∞–µ—Ç –∑–Ω–∞—á–µ–Ω–∏—è –∏–∑ –∫–∞–∂–¥–æ–π –∑–∞–ø–∏—Å–∏, –ø—Ä–∏–≤–æ–¥–∏—Ç –¥–∞—Ç—É –∫ –Ω—É–∂–Ω–æ–º—É —Ñ–æ—Ä–º–∞—Ç—É
# –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –¥–∞–Ω–Ω—ã–µ –≤ –≤–∏–¥–µ –∑–∞–ø—Ä–æ—Å–∞. –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –Ω—É–∂–Ω–∞, —á—Ç–æ–±—ã –±—ã—Å—Ç—Ä–æ –∏ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å –ø–∞—á–∫—É –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ –±–∞–∑—É.

def insert_to_clickhouse(batch):
    values = []
    for row in batch:
        id = row.get("id", 0)
        name = row.get("name", "")
        created_at = row.get("created_at", datetime.now().isoformat())
        op = row.get("op", "u")
        values.append(f"({id}, '{name}', toDateTime('{created_at}'), '{op}')")

    if values:
        query = (
            "INSERT INTO changes (id, name, created_at, op) VALUES " +
            ", ".join(values)
        )
        r = requests.post(
            CLICKHOUSE_URL,
            data=query,
            auth=(CLICKHOUSE_USER, CLICKHOUSE_PASSWORD)
        )

# –§—É–Ω–∫—Ü–∏—è select_changes –≤—ã–ø–æ–ª–Ω—è–µ—Ç –ø—Ä–æ—Å—Ç–æ–π SELECT-–∑–∞–ø—Ä–æ—Å –∫ ClickHouse,
# —á—Ç–æ–±—ã –≤—ã–≤–µ—Å—Ç–∏ 10 –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –∑–∞–ø–∏—Å–µ–π –∏–∑ —Ç–∞–±–ª–∏—Ü—ã changes. –û–Ω–∞ —Ç–∞–∫–∂–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç HTTP-–∑–∞–ø—Ä–æ—Å —Å –ª–æ–≥–∏–Ω–æ–º –∏ –ø–∞—Ä–æ–ª–µ–º.
# –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –Ω—É–∂–Ω–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ ‚Äî —á—Ç–æ–±—ã —É–±–µ–¥–∏—Ç—å—Å—è, —á—Ç–æ –¥–∞–Ω–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –≤ ClickHouse.

def select_changes():
    query = "SELECT * FROM changes ORDER BY ts DESC LIMIT 10"
    r = requests.post(
        CLICKHOUSE_URL,
        data=query,
        auth=(CLICKHOUSE_USER, CLICKHOUSE_PASSWORD)
    )
    if r.status_code == 200:
        print("üì• –ü–æ—Å–ª–µ–¥–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è –∏–∑ ClickHouse:")
        print(r.text)
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ SELECT: {r.text}")


# –§—É–Ω–∫—Ü–∏—è consume_kafka_once –ø–æ–¥–∫–ª—é—á–∞–µ—Ç—Å—è –∫ Kafka –∏ —Å–ª—É—à–∞–µ—Ç —Ç–æ–ª—å–∫–æ –Ω–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è (–Ω–∞—á–∏–Ω–∞—è —Å –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –¥–æ—Å—Ç—É–ø–Ω–æ–≥–æ).
# –û–Ω–∞ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Å–æ–±—ã—Ç–∏—è Debezium, –ø—Ä–æ–≤–µ—Ä—è—è –∏—Ö —Ç–∏–ø (op), –∏ —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç –±—É—Ñ–µ—Ä –∏–∑ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–π
# (–≤ –Ω–∞—à–µ–º —Å–ª—É—á–∞–µ —ç—Ç–æ —Ç–æ–ª—å–∫–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è). –ü–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —á—Ç–µ–Ω–∏—è, –±—É—Ñ–µ—Ä –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è –≤ ClickHouse.
# –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –∏—Å–ø–æ–ª–Ω—è–µ—Ç—Å—è –æ–¥–∏–Ω —Ä–∞–∑, –Ω–µ –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ ‚Äî –æ–Ω–∞ –≤—ã—Ö–æ–¥–∏—Ç –∏–∑ —Ü–∏–∫–ª–∞, –µ—Å–ª–∏ –Ω–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –Ω–µ—Ç –≤ —Ç–µ—á–µ–Ω–∏–µ 20 —Å–µ–∫—É–Ω–¥.

def consume_kafka_once():
    consumer = KafkaConsumer(
        'pgserver1.public.my_table', # –ù–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–ø–∏–∫–∞, –æ—Ç–∫—É–¥–∞ —á–∏—Ç–∞–µ–º –¥–∞–Ω–Ω—ã–µ (–≤ –≤–∞—à–µ–º —Å–ª—É—á–∞–µ ‚Äî –æ—Ç Debezium)
        bootstrap_servers='localhost:29092',  # –ê–¥—Ä–µ—Å –±—Ä–æ–∫–µ—Ä–∞ Kafka
        auto_offset_reset='latest', # –ï—Å–ª–∏ –Ω–µ—Ç —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω–æ–π –ø–æ–∑–∏—Ü–∏–∏, –Ω–∞—á–∞—Ç—å —Å "–ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ" —Å–æ–æ–±—â–µ–Ω–∏—è (–º–æ–∂–Ω–æ: 'earliest', 'latest', 'none')
        enable_auto_commit=False, # –ù–µ —Å–æ—Ö—Ä–∞–Ω—è—Ç—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ–∑–∏—Ü–∏—é —á—Ç–µ–Ω–∏—è (offset), —É–ø—Ä–∞–≤–ª—è–µ–º —ç—Ç–∏–º –≤—Ä—É—á–Ω—É—é
        group_id='pg-consumer-once', # –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –≥—Ä—É–ø–ø—ã ‚Äî –Ω—É–∂–µ–Ω –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è offset-–æ–≤ –∏ –±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∫–∏ –º–µ–∂–¥—É –Ω–µ—Å–∫–æ–ª—å–∫–∏–º–∏ consumer-–∞–º–∏
        value_deserializer=lambda m: json.loads(m.decode('utf-8')), # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –±–∞–π—Ç—ã —Å–æ–æ–±—â–µ–Ω–∏—è –≤ JSON
        consumer_timeout_ms=20000 # –ó–∞–≤–µ—Ä—à–∞–µ–º —á—Ç–µ–Ω–∏–µ, –µ—Å–ª–∏ –≤ —Ç–µ—á–µ–Ω–∏–µ 20 —Å–µ–∫—É–Ω–¥ –Ω–µ –ø—Ä–∏—Ö–æ–¥–∏—Ç –Ω–∏ –æ–¥–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
    )

    print("üü¢ –ß—Ç–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π –∏–∑ Kafka...\n")

    buffer = []

    for message in consumer:
        payload = message.value
        op = payload.get("op")

        if op == "u":
            after = payload.get("after")
            after["op"] = "u"
            print(f"üîÅ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ: {after}")
            buffer.append(after)
        else:
            print(f"‚ÑπÔ∏è –ü—Ä–æ–ø—É—â–µ–Ω–æ (op = {op}):", payload)

    consumer.close()

    if buffer:
        insert_to_clickhouse(buffer)
    else:
        print("‚ö†Ô∏è –ù–µ—Ç –Ω–æ–≤—ã—Ö —Å–æ–±—ã—Ç–∏–π –¥–ª—è –∑–∞–ø–∏—Å–∏ –≤ ClickHouse.")


if __name__ == '__main__':
    create_clickhouse_table()
    consume_kafka_once()
    select_changes()