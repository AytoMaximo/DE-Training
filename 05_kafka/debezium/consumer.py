from kafka import KafkaConsumer
import json

#  –°–Ω–∞—á–∞–ª–∞ —Å–∫—Ä–∏–ø—Ç —Å–æ–∑–¥–∞—ë—Ç Kafka-–∫–æ–Ω—Å—É–º–µ—Ä, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–¥–∫–ª—é—á–∞–µ—Ç—Å—è –∫ –±—Ä–æ–∫–µ—Ä—É Kafka –ø–æ –∞–¥—Ä–µ—Å—É localhost:29092
#  –∏ –ø–æ–¥–ø–∏—Å—ã–≤–∞–µ—Ç—Å—è –Ω–∞ —Ç–æ–ø–∏–∫ pgserver1.public.my_table. –≠—Ç–æ—Ç —Ç–æ–ø–∏–∫ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ–∑–¥–∞—ë—Ç—Å—è Debezium
#  –∏ —Å–æ–¥–µ—Ä–∂–∏—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–±–æ –≤—Å–µ—Ö –∏–∑–º–µ–Ω–µ–Ω–∏—è—Ö –≤ —Ç–∞–±–ª–∏—Ü–µ: –Ω–æ–≤—ã—Ö —Å—Ç—Ä–æ–∫–∞—Ö, –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è—Ö –∏ —É–¥–∞–ª–µ–Ω–∏—è—Ö.

consumer = KafkaConsumer(
    'pgserver1.public.my_table',  # –ù–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–ø–∏–∫–∞ Debezium
    bootstrap_servers='localhost:29092',
    auto_offset_reset='earliest',
    enable_auto_commit=True,
    group_id='pg-consumer-group',
    value_deserializer=lambda m: json.loads(m.decode('utf-8'))
)

# –ó–∞—Ç–µ–º —Å–∫—Ä–∏–ø—Ç –∑–∞–ø—É—Å–∫–∞–µ—Ç –±–µ—Å–∫–æ–Ω–µ—á–Ω—ã–π —Ü–∏–∫–ª, –≤ –∫–æ—Ç–æ—Ä–æ–º –∫–∞–∂–¥–æ–µ –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–∑ Kafka –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è.
# –ï—Å–ª–∏ –æ–ø–µ—Ä–∞—Ü–∏—è ‚Äî —ç—Ç–æ –≤—Å—Ç–∞–≤–∫–∞ ("op": "c"), –æ–Ω –≤—ã–≤–æ–¥–∏—Ç ID, –∏–º—è –∏ –¥–∞—Ç—É —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–π —Å—Ç—Ä–æ–∫–∏.
# –ï—Å–ª–∏ –ø—Ä–∏—à–ª–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–ª–∏ —É–¥–∞–ª–µ–Ω–∏–µ, —Å–∫—Ä–∏–ø—Ç –ø–µ—á–∞—Ç–∞–µ—Ç —ç—Ç–æ —Å–æ–±—ã—Ç–∏–µ —Ü–µ–ª–∏–∫–æ–º.

print("üü¢ –°–ª—É—à–∞–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –∏–∑ Kafka...\n")

for message in consumer:
    payload = message.value

    if payload.get("op") == "c":
        after = payload.get("after")
        print(f"üÜï –í—Å—Ç–∞–≤–∫–∞: id={after['id']}, name={after['name']}, created_at={after['created_at']}")
    elif payload.get("op") == "u":
        print("üîÅ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ:", payload)
    elif payload.get("op") == "d":
        print("‚ùå –£–¥–∞–ª–µ–Ω–∏–µ:", payload)
    else:
        print("‚ÑπÔ∏è –î—Ä—É–≥–æ–µ —Å–æ–±—ã—Ç–∏–µ:", payload)